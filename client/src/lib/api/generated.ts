/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * API Documentation
 * powered by Flasgger
 * OpenAPI spec version: 0.0.1
 */
import { createInstance } from "./index";
import type { BodyType } from "./index";
export type Violations = {
  id?: number;
  filepath?: string;
  violation_description?: string;
  track_id?: string;
  violation_type?: string;
};

export type GetApiUserInfo200 = {
  email?: string;
  id?: number;
  role?: string;
  username?: string;
};

export type PostApiUploadViolationBody = {
  file?: Blob;
  vehicle_number?: string;
  violation_type?: string;
};

export type PostApiRegisterBody = {
  email?: string;
  password?: string;
  role?: string;
  username?: string;
};

export type PostApiLoginBody = {
  password?: string;
  username?: string;
};

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];

/**
 * @summary –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const postApiLogin = (
  postApiLoginBody: BodyType<PostApiLoginBody>,
  options?: SecondParameter<typeof createInstance>
) => {
  return createInstance<void>(
    {
      url: `/login`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: postApiLoginBody,
    },
    options
  );
};

/**
 * @summary –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const postApiLogout = (
  options?: SecondParameter<typeof createInstance>
) => {
  return createInstance<void>({ url: `/logout`, method: "POST" }, options);
};

/**
 * @summary –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const postApiRegister = (
  postApiRegisterBody: BodyType<PostApiRegisterBody>,
  options?: SecondParameter<typeof createInstance>
) => {
  return createInstance<void>(
    {
      url: `/register`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: postApiRegisterBody,
    },
    options
  );
};

/**
 * @summary –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–∏—è
 */
export const postApiUploadViolation = (
  postApiUploadViolationBody: BodyType<PostApiUploadViolationBody>,
  options?: SecondParameter<typeof createInstance>
) => {
  const formData = new FormData();
  if (postApiUploadViolationBody.file !== undefined) {
    formData.append("file", postApiUploadViolationBody.file);
  }
  if (postApiUploadViolationBody.vehicle_number !== undefined) {
    formData.append(
      "vehicle_number",
      postApiUploadViolationBody.vehicle_number
    );
  }
  if (postApiUploadViolationBody.violation_type !== undefined) {
    formData.append(
      "violation_type",
      postApiUploadViolationBody.violation_type
    );
  }

  return createInstance<void>(
    {
      url: `/upload_violation`,
      method: "POST",
      headers: { "Content-Type": "multipart/form-data" },
      data: formData,
    },
    options
  );
};

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ –∏–º–µ–Ω–∏
 */
export const getApiUploadsFilename = (
  filename: string,
  options?: SecondParameter<typeof createInstance>
): Promise<Blob> => {
  return createInstance<Blob>(
    { url: `/images/${filename}`, method: "GET"},
    options
  );
};

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
 */
export const getApiUserInfo = (
  options?: SecondParameter<typeof createInstance>
) => {
  return createInstance<GetApiUserInfo200>(
    { url: `/user_info`, method: "GET" },
    options
  );
};

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π
 */
export const getApiViolations = (
  options?: SecondParameter<typeof createInstance>
) => {
  return createInstance<Violations[]>(
    { url: `/violations`, method: "GET" },
    options
  );
};

export type PostApiLoginResult = NonNullable<
  Awaited<ReturnType<typeof postApiLogin>>
>;
export type PostApiLogoutResult = NonNullable<
  Awaited<ReturnType<typeof postApiLogout>>
>;
export type PostApiRegisterResult = NonNullable<
  Awaited<ReturnType<typeof postApiRegister>>
>;
export type PostApiUploadViolationResult = NonNullable<
  Awaited<ReturnType<typeof postApiUploadViolation>>
>;
export type GetApiUploadsFilenameResult = NonNullable<
  Awaited<ReturnType<typeof getApiUploadsFilename>>
>;
export type GetApiUserInfoResult = NonNullable<
  Awaited<ReturnType<typeof getApiUserInfo>>
>;
export type GetApiViolationsResult = NonNullable<
  Awaited<ReturnType<typeof getApiViolations>>
>;
